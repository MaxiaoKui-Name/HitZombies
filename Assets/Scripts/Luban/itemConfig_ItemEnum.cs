
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class itemConfig_ItemEnum : Luban.BeanBase
{
    public itemConfig_ItemEnum(JSONNode _buf) 
    {
        { if(!_buf["enumId"].IsString) { throw new SerializationException(); }  EnumId = _buf["enumId"]; }
        { if(!_buf["number"].IsNumber) { throw new SerializationException(); }  Number = _buf["number"]; }
        { if(!_buf["note"].IsString) { throw new SerializationException(); }  Note = _buf["note"]; }
    }

    public static itemConfig_ItemEnum DeserializeitemConfig_ItemEnum(JSONNode _buf)
    {
        return new itemConfig_ItemEnum(_buf);
    }

    /// <summary>
    /// 枚举id
    /// </summary>
    public readonly string EnumId;
    /// <summary>
    /// 枚举值
    /// </summary>
    public readonly int Number;
    /// <summary>
    /// 备注
    /// </summary>
    public readonly string Note;
   
    public const int __ID__ = -158682210;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "enumId:" + EnumId + ","
        + "number:" + Number + ","
        + "note:" + Note + ","
        + "}";
    }
}

}

