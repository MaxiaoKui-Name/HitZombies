
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class monsterConfignew_monster : Luban.BeanBase
{
    public monsterConfignew_monster(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["desc"].IsString) { throw new SerializationException(); }  Desc = _buf["desc"]; }
        { if(!_buf["icon"].IsString) { throw new SerializationException(); }  Icon = _buf["icon"]; }
        { if(!_buf["atk"].IsNumber) { throw new SerializationException(); }  Atk = _buf["atk"]; }
        { if(!_buf["hp"].IsNumber) { throw new SerializationException(); }  Hp = _buf["hp"]; }
        { if(!_buf["spd"].IsNumber) { throw new SerializationException(); }  Spd = _buf["spd"]; }
        { if(!_buf["money_min"].IsNumber) { throw new SerializationException(); }  MoneyMin = _buf["money_min"]; }
        { if(!_buf["money_max"].IsNumber) { throw new SerializationException(); }  MoneyMax = _buf["money_max"]; }
        { if(!_buf["money_probability"].IsNumber) { throw new SerializationException(); }  MoneyProbability = _buf["money_probability"]; }
        { if(!_buf["skeleton"].IsString) { throw new SerializationException(); }  Skeleton = _buf["skeleton"]; }
        { if(!_buf["Scale"].IsNumber) { throw new SerializationException(); }  Scale = _buf["Scale"]; }
        { if(!_buf["weight"].IsNumber) { throw new SerializationException(); }  Weight = _buf["weight"]; }
        { if(!_buf["isBoss"].IsNumber) { throw new SerializationException(); }  IsBoss = _buf["isBoss"]; }
        { var __json0 = _buf["btree"]; if(!__json0.IsArray) { throw new SerializationException(); } Btree = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Btree.Add(__v0); }   }
        { var __json0 = _buf["fires1"]; if(!__json0.IsArray) { throw new SerializationException(); } Fires1 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Fires1.Add(__v0); }   }
        { if(!_buf["sound1"].IsString) { throw new SerializationException(); }  Sound1 = _buf["sound1"]; }
        { var __json0 = _buf["fires2"]; if(!__json0.IsArray) { throw new SerializationException(); } Fires2 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Fires2.Add(__v0); }   }
        { if(!_buf["sound2"].IsString) { throw new SerializationException(); }  Sound2 = _buf["sound2"]; }
    }

    public static monsterConfignew_monster DeserializemonsterConfignew_monster(JSONNode _buf)
    {
        return new monsterConfignew_monster(_buf);
    }

    /// <summary>
    /// 配置id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string Icon;
    /// <summary>
    /// 攻击
    /// </summary>
    public readonly float Atk;
    /// <summary>
    /// 血量
    /// </summary>
    public readonly float Hp;
    /// <summary>
    /// 移速
    /// </summary>
    public readonly float Spd;
    /// <summary>
    /// 掉落最少钱数
    /// </summary>
    public readonly int MoneyMin;
    /// <summary>
    /// 掉落最多钱数
    /// </summary>
    public readonly int MoneyMax;
    /// <summary>
    /// 掉落概率（%）
    /// </summary>
    public readonly float MoneyProbability;
    /// <summary>
    /// 龙骨资源
    /// </summary>
    public readonly string Skeleton;
    /// <summary>
    /// 缩放比例
    /// </summary>
    public readonly int Scale;
    /// <summary>
    /// 重量
    /// </summary>
    public readonly float Weight;
    /// <summary>
    /// 是否boss
    /// </summary>
    public readonly int IsBoss;
    /// <summary>
    /// 远程攻击间隔
    /// </summary>
    public readonly System.Collections.Generic.List<int> Btree;
    /// <summary>
    /// 发射数组1
    /// </summary>
    public readonly System.Collections.Generic.List<int> Fires1;
    /// <summary>
    /// 攻击音效1
    /// </summary>
    public readonly string Sound1;
    /// <summary>
    /// 发射数组2
    /// </summary>
    public readonly System.Collections.Generic.List<int> Fires2;
    /// <summary>
    /// 攻击音效1
    /// </summary>
    public readonly string Sound2;
   
    public const int __ID__ = 532717311;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "desc:" + Desc + ","
        + "icon:" + Icon + ","
        + "atk:" + Atk + ","
        + "hp:" + Hp + ","
        + "spd:" + Spd + ","
        + "moneyMin:" + MoneyMin + ","
        + "moneyMax:" + MoneyMax + ","
        + "moneyProbability:" + MoneyProbability + ","
        + "skeleton:" + Skeleton + ","
        + "Scale:" + Scale + ","
        + "weight:" + Weight + ","
        + "isBoss:" + IsBoss + ","
        + "btree:" + Luban.StringUtil.CollectionToString(Btree) + ","
        + "fires1:" + Luban.StringUtil.CollectionToString(Fires1) + ","
        + "sound1:" + Sound1 + ","
        + "fires2:" + Luban.StringUtil.CollectionToString(Fires2) + ","
        + "sound2:" + Sound2 + ","
        + "}";
    }
}

}

