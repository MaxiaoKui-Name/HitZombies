
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class levelConfignew_danConfig : Luban.BeanBase
{
    public levelConfignew_danConfig(JSONNode _buf) 
    {
        { if(!_buf["level"].IsNumber) { throw new SerializationException(); }  Level = _buf["level"]; }
        { if(!_buf["dan"].IsString) { throw new SerializationException(); }  Dan = _buf["dan"]; }
        { if(!_buf["Star_rating"].IsNumber) { throw new SerializationException(); }  StarRating = _buf["Star_rating"]; }
        { if(!_buf["promotion_reward"].IsNumber) { throw new SerializationException(); }  PromotionReward = _buf["promotion_reward"]; }
        { if(!_buf["Blood_coefficient"].IsNumber) { throw new SerializationException(); }  BloodCoefficient = _buf["Blood_coefficient"]; }
        { if(!_buf["Number_coefficient"].IsNumber) { throw new SerializationException(); }  NumberCoefficient = _buf["Number_coefficient"]; }
        { if(!_buf["Coin_Number_coefficient"].IsNumber) { throw new SerializationException(); }  CoinNumberCoefficient = _buf["Coin_Number_coefficient"]; }
        { if(!_buf["Coin_probability_coefficient"].IsNumber) { throw new SerializationException(); }  CoinProbabilityCoefficient = _buf["Coin_probability_coefficient"]; }
        { if(!_buf["Big_money"].IsNumber) { throw new SerializationException(); }  BigMoney = _buf["Big_money"]; }
        { if(!_buf["Big_money_cd"].IsNumber) { throw new SerializationException(); }  BigMoneyCd = _buf["Big_money_cd"]; }
        { if(!_buf["Small_money"].IsNumber) { throw new SerializationException(); }  SmallMoney = _buf["Small_money"]; }
        { if(!_buf["Small_money_cd"].IsNumber) { throw new SerializationException(); }  SmallMoneyCd = _buf["Small_money_cd"]; }
        { if(!_buf["note1"].IsNumber) { throw new SerializationException(); }  Note1 = _buf["note1"]; }
        { if(!_buf["note2"].IsNumber) { throw new SerializationException(); }  Note2 = _buf["note2"]; }
        { if(!_buf["note3"].IsNumber) { throw new SerializationException(); }  Note3 = _buf["note3"]; }
        { if(!_buf["note4"].IsNumber) { throw new SerializationException(); }  Note4 = _buf["note4"]; }
        { if(!_buf["note5"].IsNumber) { throw new SerializationException(); }  Note5 = _buf["note5"]; }
    }

    public static levelConfignew_danConfig DeserializelevelConfignew_danConfig(JSONNode _buf)
    {
        return new levelConfignew_danConfig(_buf);
    }

    /// <summary>
    /// 关卡ID
    /// </summary>
    public readonly int Level;
    /// <summary>
    /// 段位
    /// </summary>
    public readonly string Dan;
    /// <summary>
    /// 星级
    /// </summary>
    public readonly int StarRating;
    /// <summary>
    /// 升段金币奖励
    /// </summary>
    public readonly int PromotionReward;
    /// <summary>
    /// 怪物宝箱血量系数
    /// </summary>
    public readonly float BloodCoefficient;
    /// <summary>
    /// 怪物数量系数
    /// </summary>
    public readonly float NumberCoefficient;
    /// <summary>
    /// 金币掉落数量系数（包括宝箱和怪物）
    /// </summary>
    public readonly float CoinNumberCoefficient;
    /// <summary>
    /// 金币掉落概率系数
    /// </summary>
    public readonly float CoinProbabilityCoefficient;
    /// <summary>
    /// 大补给MIXI奖基准值
    /// </summary>
    public readonly int BigMoney;
    /// <summary>
    /// 大补给CD（秒）
    /// </summary>
    public readonly int BigMoneyCd;
    /// <summary>
    /// 小补给MIXI奖基准值
    /// </summary>
    public readonly int SmallMoney;
    /// <summary>
    /// 小补给CD（秒）
    /// </summary>
    public readonly int SmallMoneyCd;
    public readonly float Note1;
    public readonly float Note2;
    /// <summary>
    /// 血量系数备份
    /// </summary>
    public readonly float Note3;
    /// <summary>
    /// APK血量系数备份
    /// </summary>
    public readonly float Note4;
    /// <summary>
    /// 计划每关升级奖励
    /// </summary>
    public readonly float Note5;
   
    public const int __ID__ = 2034142254;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "level:" + Level + ","
        + "dan:" + Dan + ","
        + "StarRating:" + StarRating + ","
        + "promotionReward:" + PromotionReward + ","
        + "BloodCoefficient:" + BloodCoefficient + ","
        + "NumberCoefficient:" + NumberCoefficient + ","
        + "CoinNumberCoefficient:" + CoinNumberCoefficient + ","
        + "CoinProbabilityCoefficient:" + CoinProbabilityCoefficient + ","
        + "BigMoney:" + BigMoney + ","
        + "BigMoneyCd:" + BigMoneyCd + ","
        + "SmallMoney:" + SmallMoney + ","
        + "SmallMoneyCd:" + SmallMoneyCd + ","
        + "note1:" + Note1 + ","
        + "note2:" + Note2 + ","
        + "note3:" + Note3 + ","
        + "note4:" + Note4 + ","
        + "note5:" + Note5 + ","
        + "}";
    }
}

}

