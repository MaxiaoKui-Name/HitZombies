
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class playerConfig_HeroRes : Luban.BeanBase
{
    public playerConfig_HeroRes(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["des"].IsString) { throw new SerializationException(); }  Des = _buf["des"]; }
        { var __json0 = _buf["attributes"]; if(!__json0.IsArray) { throw new SerializationException(); } Attributes = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Attributes.Add(__v0); }   }
        { var __json0 = _buf["skills"]; if(!__json0.IsArray) { throw new SerializationException(); } Skills = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Skills.Add(__v0); }   }
        { var __json0 = _buf["buffs"]; if(!__json0.IsArray) { throw new SerializationException(); } Buffs = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Buffs.Add(__v0); }   }
        { if(!_buf["skeleton"].IsString) { throw new SerializationException(); }  Skeleton = _buf["skeleton"]; }
        { if(!_buf["maxLevel"].IsNumber) { throw new SerializationException(); }  MaxLevel = _buf["maxLevel"]; }
        { if(!_buf["skillName"].IsString) { throw new SerializationException(); }  SkillName = _buf["skillName"]; }
        { if(!_buf["skillIcon"].IsString) { throw new SerializationException(); }  SkillIcon = _buf["skillIcon"]; }
        { if(!_buf["skillDesc"].IsString) { throw new SerializationException(); }  SkillDesc = _buf["skillDesc"]; }
        { if(!_buf["unlockDesc"].IsString) { throw new SerializationException(); }  UnlockDesc = _buf["unlockDesc"]; }
    }

    public static playerConfig_HeroRes DeserializeplayerConfig_HeroRes(JSONNode _buf)
    {
        return new playerConfig_HeroRes(_buf);
    }

    /// <summary>
    /// 配置id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Des;
    /// <summary>
    /// Attribute
    /// </summary>
    public readonly System.Collections.Generic.List<int> Attributes;
    /// <summary>
    /// Skill
    /// </summary>
    public readonly System.Collections.Generic.List<int> Skills;
    /// <summary>
    /// Buff
    /// </summary>
    public readonly System.Collections.Generic.List<int> Buffs;
    /// <summary>
    /// 龙骨资源
    /// </summary>
    public readonly string Skeleton;
    /// <summary>
    /// 最高等级
    /// </summary>
    public readonly int MaxLevel;
    /// <summary>
    /// 技能名
    /// </summary>
    public readonly string SkillName;
    /// <summary>
    /// 技能图标
    /// </summary>
    public readonly string SkillIcon;
    /// <summary>
    /// 技能描述
    /// </summary>
    public readonly string SkillDesc;
    /// <summary>
    /// 解锁条件描述(0:仅文字/1:金币购买/2:钻石购买/3:看广告解锁), (描述/价格)
    /// </summary>
    public readonly string UnlockDesc;
   
    public const int __ID__ = -610443414;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "des:" + Des + ","
        + "attributes:" + Luban.StringUtil.CollectionToString(Attributes) + ","
        + "skills:" + Luban.StringUtil.CollectionToString(Skills) + ","
        + "buffs:" + Luban.StringUtil.CollectionToString(Buffs) + ","
        + "skeleton:" + Skeleton + ","
        + "maxLevel:" + MaxLevel + ","
        + "skillName:" + SkillName + ","
        + "skillIcon:" + SkillIcon + ","
        + "skillDesc:" + SkillDesc + ","
        + "unlockDesc:" + UnlockDesc + ","
        + "}";
    }
}

}

