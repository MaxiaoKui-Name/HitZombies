
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class skillConfig_FireRes : Luban.BeanBase
{
    public skillConfig_FireRes(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["strategy"].IsNumber) { throw new SerializationException(); }  Strategy = _buf["strategy"]; }
        { var __json0 = _buf["strategyParams"]; if(!__json0.IsArray) { throw new SerializationException(); } StrategyParams = new System.Collections.Generic.List<float>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  StrategyParams.Add(__v0); }   }
        { if(!_buf["sound"].IsString) { throw new SerializationException(); }  Sound = _buf["sound"]; }
        { if(!_buf["bulletId"].IsNumber) { throw new SerializationException(); }  BulletId = _buf["bulletId"]; }
        { if(!_buf["bulletDuration"].IsNumber) { throw new SerializationException(); }  BulletDuration = _buf["bulletDuration"]; }
        { if(!_buf["delay"].IsNumber) { throw new SerializationException(); }  Delay = _buf["delay"]; }
        { if(!_buf["atkRate"].IsNumber) { throw new SerializationException(); }  AtkRate = _buf["atkRate"]; }
        { if(!_buf["critRate"].IsNumber) { throw new SerializationException(); }  CritRate = _buf["critRate"]; }
        { if(!_buf["atkBack"].IsNumber) { throw new SerializationException(); }  AtkBack = _buf["atkBack"]; }
        { if(!_buf["trackRadius"].IsNumber) { throw new SerializationException(); }  TrackRadius = _buf["trackRadius"]; }
        { if(!_buf["trackRotate"].IsNumber) { throw new SerializationException(); }  TrackRotate = _buf["trackRotate"]; }
        { if(!_buf["note"].IsString) { throw new SerializationException(); }  Note = _buf["note"]; }
    }

    public static skillConfig_FireRes DeserializeskillConfig_FireRes(JSONNode _buf)
    {
        return new skillConfig_FireRes(_buf);
    }

    /// <summary>
    /// 配置id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 发射方式
    /// </summary>
    public readonly int Strategy;
    /// <summary>
    /// 发射参数
    /// </summary>
    public readonly System.Collections.Generic.List<float> StrategyParams;
    /// <summary>
    /// 释放音效
    /// </summary>
    public readonly string Sound;
    /// <summary>
    /// 子弹id BulletRes
    /// </summary>
    public readonly int BulletId;
    /// <summary>
    /// 子弹有效时间
    /// </summary>
    public readonly int BulletDuration;
    /// <summary>
    /// 发射延迟
    /// </summary>
    public readonly int Delay;
    /// <summary>
    /// 攻击系数
    /// </summary>
    public readonly float AtkRate;
    /// <summary>
    /// 暴击系数
    /// </summary>
    public readonly float CritRate;
    /// <summary>
    /// 击退力度（10代表击退体重100的怪10像素，击退体重50的怪20像素，5代表击退体重100的怪5像素，击退体重20的怪25像素，以此类推）
    /// </summary>
    public readonly int AtkBack;
    /// <summary>
    /// 追踪半径
    /// </summary>
    public readonly int TrackRadius;
    /// <summary>
    /// 追踪转角限制
    /// </summary>
    public readonly int TrackRotate;
    /// <summary>
    /// 备注
    /// </summary>
    public readonly string Note;
   
    public const int __ID__ = 1952983838;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "strategy:" + Strategy + ","
        + "strategyParams:" + Luban.StringUtil.CollectionToString(StrategyParams) + ","
        + "sound:" + Sound + ","
        + "bulletId:" + BulletId + ","
        + "bulletDuration:" + BulletDuration + ","
        + "delay:" + Delay + ","
        + "atkRate:" + AtkRate + ","
        + "critRate:" + CritRate + ","
        + "atkBack:" + AtkBack + ","
        + "trackRadius:" + TrackRadius + ","
        + "trackRotate:" + TrackRotate + ","
        + "note:" + Note + ","
        + "}";
    }
}

}

