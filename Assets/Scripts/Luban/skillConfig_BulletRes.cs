
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class skillConfig_BulletRes : Luban.BeanBase
{
    public skillConfig_BulletRes(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["resource"].IsString) { throw new SerializationException(); }  Resource = _buf["resource"]; }
        { if(!_buf["sound"].IsString) { throw new SerializationException(); }  Sound = _buf["sound"]; }
        { if(!_buf["DamageScope"].IsNumber) { throw new SerializationException(); }  DamageScope = _buf["DamageScope"]; }
        { if(!_buf["isGroupAttack"].IsNumber) { throw new SerializationException(); }  IsGroupAttack = _buf["isGroupAttack"]; }
        { if(!_buf["isCircleBack"].IsNumber) { throw new SerializationException(); }  IsCircleBack = _buf["isCircleBack"]; }
        { if(!_buf["isGround"].IsNumber) { throw new SerializationException(); }  IsGround = _buf["isGround"]; }
        { if(!_buf["isRotation"].IsNumber) { throw new SerializationException(); }  IsRotation = _buf["isRotation"]; }
        { if(!_buf["isPassActor"].IsNumber) { throw new SerializationException(); }  IsPassActor = _buf["isPassActor"]; }
        { if(!_buf["isPassWall"].IsNumber) { throw new SerializationException(); }  IsPassWall = _buf["isPassWall"]; }
        { if(!_buf["isCanCrit"].IsNumber) { throw new SerializationException(); }  IsCanCrit = _buf["isCanCrit"]; }
        { if(!_buf["effect"].IsNumber) { throw new SerializationException(); }  Effect = _buf["effect"]; }
        { var __json0 = _buf["hitBuffs"]; if(!__json0.IsArray) { throw new SerializationException(); } HitBuffs = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  HitBuffs.Add(__v0); }   }
        { if(!_buf["tail"].IsString) { throw new SerializationException(); }  Tail = _buf["tail"]; }
        { if(!_buf["tailTime"].IsNumber) { throw new SerializationException(); }  TailTime = _buf["tailTime"]; }
    }

    public static skillConfig_BulletRes DeserializeskillConfig_BulletRes(JSONNode _buf)
    {
        return new skillConfig_BulletRes(_buf);
    }

    /// <summary>
    /// 配置id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 美术资源
    /// </summary>
    public readonly string Resource;
    /// <summary>
    /// 释放音效
    /// </summary>
    public readonly string Sound;
    /// <summary>
    /// 伤害范围
    /// </summary>
    public readonly int DamageScope;
    /// <summary>
    /// 是否群攻
    /// </summary>
    public readonly int IsGroupAttack;
    /// <summary>
    /// 是否圆周击退
    /// </summary>
    public readonly int IsCircleBack;
    /// <summary>
    /// 是否贴地
    /// </summary>
    public readonly int IsGround;
    /// <summary>
    /// 是否跟随方向旋转
    /// </summary>
    public readonly int IsRotation;
    /// <summary>
    /// 是否穿人
    /// </summary>
    public readonly int IsPassActor;
    /// <summary>
    /// 是否穿墙
    /// </summary>
    public readonly int IsPassWall;
    /// <summary>
    /// 能否暴击
    /// </summary>
    public readonly int IsCanCrit;
    /// <summary>
    /// 击中特效
    /// </summary>
    public readonly int Effect;
    /// <summary>
    /// 命中BUFF
    /// </summary>
    public readonly System.Collections.Generic.List<int> HitBuffs;
    /// <summary>
    /// 拖尾资源
    /// </summary>
    public readonly string Tail;
    /// <summary>
    /// 拖尾恢复时间
    /// </summary>
    public readonly int TailTime;
   
    public const int __ID__ = 1478812626;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "resource:" + Resource + ","
        + "sound:" + Sound + ","
        + "DamageScope:" + DamageScope + ","
        + "isGroupAttack:" + IsGroupAttack + ","
        + "isCircleBack:" + IsCircleBack + ","
        + "isGround:" + IsGround + ","
        + "isRotation:" + IsRotation + ","
        + "isPassActor:" + IsPassActor + ","
        + "isPassWall:" + IsPassWall + ","
        + "isCanCrit:" + IsCanCrit + ","
        + "effect:" + Effect + ","
        + "hitBuffs:" + Luban.StringUtil.CollectionToString(HitBuffs) + ","
        + "tail:" + Tail + ","
        + "tailTime:" + TailTime + ","
        + "}";
    }
}

}

