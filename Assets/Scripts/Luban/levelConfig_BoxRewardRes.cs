
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class levelConfig_BoxRewardRes : Luban.BeanBase
{
    public levelConfig_BoxRewardRes(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["skill"].IsNumber) { throw new SerializationException(); }  Skill = _buf["skill"]; }
        { var __json0 = _buf["buff"]; if(!__json0.IsArray) { throw new SerializationException(); } Buff = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Buff.Add(__v0); }   }
        { var __json0 = _buf["gold"]; if(!__json0.IsArray) { throw new SerializationException(); } Gold = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Gold.Add(__v0); }   }
        { var __json0 = _buf["probability"]; if(!__json0.IsArray) { throw new SerializationException(); } Probability = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Probability.Add(__v0); }   }
        { var __json0 = _buf["type"]; if(!__json0.IsArray) { throw new SerializationException(); } Type = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Type.Add(__v0); }   }
        { var __json0 = _buf["replace"]; if(!__json0.IsArray) { throw new SerializationException(); } Replace = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Replace.Add(__v0); }   }
    }

    public static levelConfig_BoxRewardRes DeserializelevelConfig_BoxRewardRes(JSONNode _buf)
    {
        return new levelConfig_BoxRewardRes(_buf);
    }

    /// <summary>
    /// 配置id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 关卡
    /// </summary>
    public readonly int Skill;
    /// <summary>
    /// Mini
    /// </summary>
    public readonly System.Collections.Generic.List<int> Buff;
    /// <summary>
    /// Minor
    /// </summary>
    public readonly System.Collections.Generic.List<int> Gold;
    /// <summary>
    /// Major
    /// </summary>
    public readonly System.Collections.Generic.List<int> Probability;
    /// <summary>
    /// Mega
    /// </summary>
    public readonly System.Collections.Generic.List<int> Type;
    /// <summary>
    /// Grand
    /// </summary>
    public readonly System.Collections.Generic.List<int> Replace;
   
    public const int __ID__ = -395194049;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "skill:" + Skill + ","
        + "buff:" + Luban.StringUtil.CollectionToString(Buff) + ","
        + "gold:" + Luban.StringUtil.CollectionToString(Gold) + ","
        + "probability:" + Luban.StringUtil.CollectionToString(Probability) + ","
        + "type:" + Luban.StringUtil.CollectionToString(Type) + ","
        + "replace:" + Luban.StringUtil.CollectionToString(Replace) + ","
        + "}";
    }
}

}

