
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class PlayerConfignew_PlayerConfig : Luban.BeanBase
{
    public PlayerConfignew_PlayerConfig(JSONNode _buf) 
    {
        { if(!_buf["lv"].IsNumber) { throw new SerializationException(); }  Lv = _buf["lv"]; }
        { if(!_buf["exp"].IsString) { throw new SerializationException(); }  Exp = _buf["exp"]; }
        { if(!_buf["total"].IsNumber) { throw new SerializationException(); }  Total = _buf["total"]; }
        { if(!_buf["Blood"].IsNumber) { throw new SerializationException(); }  Blood = _buf["Blood"]; }
        { if(!_buf["note1"].IsNumber) { throw new SerializationException(); }  Note1 = _buf["note1"]; }
        { if(!_buf["note2"].IsString) { throw new SerializationException(); }  Note2 = _buf["note2"]; }
        { if(!_buf["icon"].IsString) { throw new SerializationException(); }  Icon = _buf["icon"]; }
        { if(!_buf["resource"].IsString) { throw new SerializationException(); }  Resource = _buf["resource"]; }
        { if(!_buf["sound"].IsString) { throw new SerializationException(); }  Sound = _buf["sound"]; }
        { if(!_buf["cd"].IsNumber) { throw new SerializationException(); }  Cd = _buf["cd"]; }
        { var __json0 = _buf["fires"]; if(!__json0.IsArray) { throw new SerializationException(); } Fires = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Fires.Add(__v0); }   }
        { if(!_buf["note3"].IsString) { throw new SerializationException(); }  Note3 = _buf["note3"]; }
    }

    public static PlayerConfignew_PlayerConfig DeserializePlayerConfignew_PlayerConfig(JSONNode _buf)
    {
        return new PlayerConfignew_PlayerConfig(_buf);
    }

    /// <summary>
    /// 玩家等级
    /// </summary>
    public readonly int Lv;
    /// <summary>
    /// 升级所需经验
    /// </summary>
    public readonly string Exp;
    /// <summary>
    /// 当前等级最高子弹价格（等同伤害））
    /// </summary>
    public readonly long Total;
    /// <summary>
    /// 当前等级玩家血量
    /// </summary>
    public readonly long Blood;
    /// <summary>
    /// 备注
    /// </summary>
    public readonly int Note1;
    /// <summary>
    /// 说明
    /// </summary>
    public readonly string Note2;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string Icon;
    /// <summary>
    /// 龙骨资源
    /// </summary>
    public readonly string Resource;
    /// <summary>
    /// 释放音效
    /// </summary>
    public readonly string Sound;
    /// <summary>
    /// 冷却时间（ms）
    /// </summary>
    public readonly int Cd;
    /// <summary>
    /// 发射数组
    /// </summary>
    public readonly System.Collections.Generic.List<int> Fires;
    /// <summary>
    /// 每10秒输出值，也等于金币消耗量
    /// </summary>
    public readonly string Note3;
   
    public const int __ID__ = 225878405;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "lv:" + Lv + ","
        + "exp:" + Exp + ","
        + "total:" + Total + ","
        + "Blood:" + Blood + ","
        + "note1:" + Note1 + ","
        + "note2:" + Note2 + ","
        + "icon:" + Icon + ","
        + "resource:" + Resource + ","
        + "sound:" + Sound + ","
        + "cd:" + Cd + ","
        + "fires:" + Luban.StringUtil.CollectionToString(Fires) + ","
        + "note3:" + Note3 + ","
        + "}";
    }
}

}

